#ifndef SAMPLE_DISK_INCLUDE
#define SAMPLE_DISK_INCLUDE

#define SAMPLE_DISK_64

#ifdef SAMPLE_DISK_64

#define SAMPLE_DISK_SIZE 64
static const float2 sampleDisk[SAMPLE_DISK_SIZE] = {
		0.1187053, 0.7951565,
		0.1173675, 0.6087878,
		-0.09958518, 0.7248842,
		0.4259812, 0.6152718,
		0.3723574, 0.8892787,
		-0.02289676, 0.9972908,
		-0.08234791, 0.5048386,
		0.1821235, 0.9673787,
		-0.2137264, 0.9011746,
		0.3115066, 0.4205415,
		0.1216329, 0.383266,
		0.5948939, 0.7594361,
		0.7576465, 0.5336417,
		-0.521125, 0.7599803,
		-0.2923127, 0.6545699,
		0.6782473, 0.22385,
		-0.3077152, 0.4697627,
		0.4484913, 0.2619455,
		-0.5308799, 0.4998215,
		-0.7379634, 0.5304936,
		0.02613133, 0.1764302,
		-0.1461073, 0.3047384,
		-0.8451027, 0.3249073,
		-0.4507707, 0.2101997,
		-0.6137282, 0.3283674,
		-0.2385868, 0.08716244,
		0.3386548, 0.01528411,
		-0.04230833, -0.1494652,
		0.167115, -0.1098648,
		-0.525606, 0.01572019,
		-0.7966855, 0.1318727,
		0.5704287, 0.4778273,
		-0.9516637, 0.002725032,
		-0.7068223, -0.1572321,
		0.2173306, -0.3494083,
		0.06100426, -0.4492816,
		0.2333982, 0.2247189,
		0.07270987, -0.6396734,
		0.4670808, -0.2324669,
		0.3729528, -0.512625,
		0.5675077, -0.4054544,
		-0.3691984, -0.128435,
		0.8752473, 0.2256988,
		-0.2680127, -0.4684393,
		-0.1177551, -0.7205751,
		-0.1270121, -0.3105424,
		0.5595394, -0.06309237,
		-0.9299136, -0.1870008,
		0.974674, 0.03677348,
		0.7726735, -0.06944724,
		-0.4995361, -0.3663749,
		0.6474168, -0.2315787,
		0.1911449, -0.8858921,
		0.3671001, -0.7970535,
		-0.6970353, -0.4449432,
		-0.417599, -0.7189326,
		-0.5584748, -0.6026504,
		-0.02624448, -0.9141423,
		0.565636, -0.6585149,
		-0.874976, -0.3997879,
		0.9177843, -0.2110524,
		0.8156927, -0.3969557,
		-0.2833054, -0.8395444,
		0.799141, -0.5886372
};

#endif
#ifdef SAMPLE_DISK_32

#define SAMPLE_DISK_SIZE 32
static const float2 sampleDisk[SAMPLE_DISK_SIZE] = {
	 0.4873902, -0.8569599,
	 0.3463737, -0.3387939,
	 0.6290055, -0.4735314,
	 0.1855854, -0.8848142,
	 0.7677917, 0.02691162,
	 0.3009142, -0.6365873,
	 0.4268422, -0.006137629,
	 -0.06682982, -0.7833805,
	 0.0347263, -0.3994124,
	 0.4494694, 0.5206614,
	 0.219377, 0.2438844,
	 0.1285765, -0.1215554,
	 0.8907049, 0.4334931,
	 0.2556469, 0.766552,
	 -0.03692406, 0.3629236,
	 0.6651103, 0.7286811,
	 -0.429309, -0.2282262,
	 -0.2730969, -0.4683513,
	 -0.2755986, 0.7327913,
	 -0.3329705, 0.1754638,
	 -0.1731326, -0.1087716,
	 0.9212226, -0.3716638,
	 -0.5388235, 0.4603968,
	 -0.6307321, 0.7615924,
	 -0.7709175, -0.08894937,
	 -0.7205971, -0.3609493,
	 -0.5386202, -0.5847159,
	 -0.6520834, 0.1785284,
	 -0.9310582, 0.2040343,
	 -0.828178, 0.5559599,
	 0.6297836, 0.2946501,
	 -0.05836084, 0.9006807
};

#endif
#ifdef SAMPLE_DISK_16
#define SAMPLE_DISK_SIZE 16
static const float2 sampleDisk[SAMPLE_DISK_SIZE] = {
	0.1232981, -0.03923375,
	-0.5625377, -0.3602428,
	0.6403719, 0.06821123,
	0.2813387, -0.5881588,
	-0.5731218, 0.2700572,
	0.2033166, 0.4197739,
	0.8467958, -0.3545584,
	-0.4230451, -0.797441,
	0.7190253, 0.5693575,
	0.03815468, -0.9914171,
	-0.2236265, 0.5028614,
	0.1722254, 0.983663,
	-0.2912464, 0.8980512,
	-0.8984148, -0.08762786,
	-0.6995085, 0.6734185,
	-0.293196, -0.06289119
};

#endif

float2 Rand(float3 seed) {
	float dt = dot(seed + _Time.w, float3(12.9898, 78.233, 45.5432)) + seed + _Time.w;
	float noise = frac(sin(dt) * 43758.5453)*3.1415926;

	return float2(cos(noise), sin(noise));
}

inline float2 RandOffset(int index, float2 noise) {
	float2 rd = sampleDisk[index%SAMPLE_DISK_SIZE];
	return float2(rd.x * noise.x - rd.y * noise.y, rd.y * noise.x + rd.x * noise.y);
}




#endif